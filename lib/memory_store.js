// Generated by CoffeeScript 1.9.2
(function() {
  var MemoryStore, normalizeKey;

  normalizeKey = function(key) {
    return JSON.stringify(key);
  };

  module.exports = MemoryStore = (function() {
    function MemoryStore() {
      this.paths = {};
    }

    MemoryStore.prototype.set = function(key, responseHeaders, callback) {
      return process.nextTick((function(_this) {
        return function() {
          _this.paths[normalizeKey(key)] = responseHeaders;
          if (callback != null) {
            return callback();
          }
        };
      })(this));
    };

    MemoryStore.prototype.get = function(key, callback) {
      return process.nextTick((function(_this) {
        return function() {
          return callback(null, _this.paths[normalizeKey(key)]);
        };
      })(this));
    };

    MemoryStore.prototype["delete"] = function(key, callback) {
      return process.nextTick((function(_this) {
        return function() {
          var cached, contents, path, pathString, ref;
          if ((key.url != null) && key.url instanceof RegExp) {
            cached = [];
            ref = _this.paths;
            for (pathString in ref) {
              contents = ref[pathString];
              path = JSON.parse(pathString);
              if (key.url.test(path.url)) {
                delete _this.paths[pathString];
                cached.push(contents);
              }
            }
          } else {
            key = normalizeKey(key);
            cached = _this.paths[key];
            delete _this.paths[key];
          }
          if (callback != null) {
            return callback(null, cached);
          }
        };
      })(this));
    };

    MemoryStore.prototype.syncGet = function(key) {
      return this.paths[normalizeKey(key)];
    };

    return MemoryStore;

  })();

}).call(this);
