// Generated by CoffeeScript 1.6.3
(function() {
  var MemoryStore, normalizeKey;

  normalizeKey = function(key) {
    if (typeof key === 'string') {
      key = {
        url: key
      };
    }
    return JSON.stringify(key);
  };

  module.exports = MemoryStore = (function() {
    function MemoryStore() {
      this.paths = {};
    }

    MemoryStore.prototype.set = function(key, responseHeaders, callback) {
      var _this = this;
      return process.nextTick(function() {
        _this.paths[normalizeKey(key)] = responseHeaders;
        if (callback != null) {
          return callback();
        }
      });
    };

    MemoryStore.prototype.get = function(key, callback) {
      var _this = this;
      return process.nextTick(function() {
        return callback(null, _this.paths[normalizeKey(key)]);
      });
    };

    MemoryStore.prototype["delete"] = function(key, callback) {
      var _this = this;
      return process.nextTick(function() {
        var cached;
        key = normalizeKey(key);
        cached = _this.paths[key];
        delete _this.paths[key];
        if (callback != null) {
          return callback(null, cached);
        }
      });
    };

    MemoryStore.prototype.syncGet = function(key) {
      return this.paths[normalizeKey(key)];
    };

    return MemoryStore;

  })();

}).call(this);
